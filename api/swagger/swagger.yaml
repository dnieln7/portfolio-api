swagger: "2.0"
info:
  version: "1.0.0"
  title: nodejs-token-api

host: localhost:10010

# Cors config

x-google-endpoints:
  - name: 'localhost:10010'
    allowCors: 'true'

# Security

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.


      A valid JWT token is generated by the API and retourned as answer of a call
      to the route /login giving a valid user & password.


      The following syntax must be used in the 'Authorization' header :

          Bearer xxxxxx.yyyyyyy.zzzzzz

# Paths

basePath: /

schemes: [http, https]

consumes:
  - application/json
produces:
  - application/json
paths:

  /login:
    x-swagger-router-controller: login.controller

    post:
      operationId: login
      description: Login with a particular role
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        "403":
          description: Access Denied
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user:
    x-swagger-router-controller: user.controller

    get:
      operationId: getUsers
      description: Find all
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: role
          in: query
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      operationId: postUser
      description: Create
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/{id}:
    x-swagger-router-controller: user.controller

    get:
      operationId: getUserById
      description: Find by id
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      operationId: putUser
      description: Update
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: user
          in: body
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      operationId: delUser
      description: Delete
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DelResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

definitions:

  # Generic responses

  DelResponse:
    type: object
    properties:
      success:
        type: number
        description: Returns 1 if successful
      description:
        type: string
        description: A short comment
    required:
      - success
      - description

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  # Login objects

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  Authentication:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      role:
        type: string

  # User objects

  User:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      role:
        type: string
    required:
      - username
      - password
      - role

  UserResponse:
    type: object
    properties:
      id:
        type: number
      username:
        type: string
      role:
        type: string
    required:
      - id
      - username
      - role

  UserList:
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/UserResponse"

  Project:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      summary:
        type: string
      image:
        type: string
      type:
        type: string
      year:
        type: integer
      finished:
        type: boolean
      executableUrl:
        type: string
      executableGit:
        type: string
      webUrl:
        type: string
      webGit:
        type: string
      androidUrl:
        type: string
      androidGit:
        type: string
      hostingDetails:
        type: string
      languages:
        type: array
        items:
          type: string
      technologies:
        type: array
        items:
          type: string
      problem:
        type: string
      difficulties:
        type: string
      solution:
        type: string
      comments:
        type: string
      features:
        type: array
        items:
          type: string
