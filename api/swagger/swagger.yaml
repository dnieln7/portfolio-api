swagger: '2.0'
info:
  version: '1.0.0'
  title: nodejs-token-api

host: localhost:10010

# Cors config

x-google-endpoints:
  - name: 'localhost:10010'
    allowCors: 'true'

# Security

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.


      A valid JWT token is generated by the API and retourned as answer of a call
      to the route /login giving a valid user & password.


      The following syntax must be used in the 'Authorization' header :

          Bearer xxxxxx.yyyyyyy.zzzzzz

# Paths

basePath: /

schemes: [http, https]

consumes:
  - application/json
produces:
  - application/json

paths:

  /login:
    x-swagger-router-controller: auth.controller

    post:
      operationId: login
      description: Login with a particular role
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: '#/definitions/Authentication'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoginResponse'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Invalid password
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /sign-up:
    x-swagger-router-controller: auth.controller

    post:
      operationId: register
      description: Create a new user
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /projects:
    x-swagger-router-controller: project.controller

    get:
      operationId: getProjects
      description: Returns all projects
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ProjectsResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      operationId: postProject
      description: Save a new project
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: project
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '201':
          description: success
          schema:
            $ref: '#/definitions/ProjectResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /projects/{id}:
    x-swagger-router-controller: project.controller

    get:
      operationId: getProjectById
      description: Returns a project that matches the provided id
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/ProjectResponse"
        '404':
          description: Project not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      operationId: putProject
      description: Update an existing project
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: project
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ProjectResponse'
        '404':
          description: Project not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      operationId: deleteProject
      description: Delete an existing project
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResponse'
        '404':
          description: Project not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /swagger:
    x-swagger-pipe: swagger_raw

definitions:

  # Responses

  ErrorResponse:
    type: object
    properties:
      successful:
        type: boolean
      message:
        type: string
      result:
        type: string

  DeleteResponse:
    type: object
    properties:
      successful:
        type: boolean
      id:
        type: integer

  LoginResponse:
    type: object
    properties:
      successful:
        type: boolean
      message:
        type: string
      token:
        type: string

  UserResponse:
    type: object
    properties:
      successful:
        type: boolean
      message:
        type: string
      result:
        $ref: '#/definitions/User'

  ProjectResponse:
    type: object
    properties:
      successful:
        type: boolean
      message:
        type: string
      result:
        $ref: '#/definitions/Project'

  ProjectsResponse:
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'

  # Data objects

  Authentication:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string

  User:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string

  Project:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      summary:
        type: string
      image:
        type: string
      type:
        type: string
      year:
        type: integer
      finished:
        type: boolean
      updates:
        type: boolean
      executableUrl:
        type: string
      executableGit:
        type: string
      webUrl:
        type: string
      webGit:
        type: string
      androidUrl:
        type: string
      androidGit:
        type: string
      hostingDetails:
        type: string
      languages:
        type: array
        items:
          type: string
      technologies:
        type: array
        items:
          type: string
      problem:
        type: string
      difficulties:
        type: string
      solution:
        type: string
      comments:
        type: string
      features:
        type: array
        items:
          type: string
